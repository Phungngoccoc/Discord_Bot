const Discord = require("discord.js");
const { getUserData, updateUserData } = require('../service/userService');

module.exports = {
    name: "bc",
    description: "Ch∆°i B·∫ßu Cua b·∫±ng c√°ch ƒë·∫∑t c∆∞·ª£c v√†o m·ªôt con v·∫≠t!",
    execute: async (message) => {
        const userId = message.author.id;
        const choices = ["b·∫ßu", "cua", "t√¥m", "c√°", "g√†", "nai"];
        const match = message.content.match(/\d+/);
        let betAmount = match ? parseInt(match[0]) : 1;

        if (isNaN(betAmount) || betAmount <= 0) return message.reply("‚ùå Vui l√≤ng nh·∫≠p s·ªë ti·ªÅn c∆∞·ª£c h·ª£p l·ªá.");
        if (betAmount > 200000) return message.reply("‚ùå S·ªë ti·ªÅn c∆∞·ª£c t·ªëi ƒëa l√† 200,000 xu.");

        let user = await getUserData(userId);
        if (!user) {
            user = { money: 1000 };
            await updateUserData(userId, { money: user.money });
        }
        if (betAmount > user.money) return message.reply("‚ùå B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ c∆∞·ª£c s·ªë ti·ªÅn n√†y.");

        user.money -= betAmount;
        await updateUserData(userId, { money: user.money });

        const choice = message.content.match(/\b(b·∫ßu|cua|t√¥m|c√°|g√†|nai)\b/i);
        let betChoice = choice ? choice[0] : null;
        if (!choices.includes(betChoice.toLowerCase())) {
            return message.reply("‚ùå B·∫°n ch·ªâ c√≥ th·ªÉ ƒë·∫∑t c∆∞·ª£c v√†o: **B·∫ßu, Cua, T√¥m, C√°, G√†, Nai**.");
        }

        if (isNaN(betAmount) || betAmount <= 0) {
            return message.reply("‚ùå S·ªë ti·ªÅn c∆∞·ª£c kh√¥ng h·ª£p l·ªá!");
        }

        if (user.money < betAmount) {
            return message.reply("‚ùå B·∫°n kh√¥ng c√≥ ƒë·ªß ti·ªÅn ƒë·ªÉ c∆∞·ª£c!");
        }

        // Tung x√∫c x·∫Øc
        let results = [
            choices[Math.floor(Math.random() * choices.length)],
            choices[Math.floor(Math.random() * choices.length)],
            choices[Math.floor(Math.random() * choices.length)]
        ];

        // T√≠nh ti·ªÅn th·∫Øng/thua
        let winCount = results.filter(result => result === betChoice).length;
        let winAmount = betAmount * winCount;

        if (winCount > 0) {
            user.money += winAmount;
            message.reply(`üéâ **K·∫øt qu·∫£:** ${results.join(" - ")}\nB·∫°n ƒë·∫∑t **${betChoice}** v√† th·∫Øng **${winAmount} xu**!`);
        } else {
            user.money -= betAmount;
            message.reply(`üò¢ **K·∫øt qu·∫£:** ${results.join(" - ")}\nB·∫°n ƒë·∫∑t **${betChoice}** nh∆∞ng kh√¥ng tr√∫ng, m·∫•t **${betAmount} xu**.`);
        }
    }
};
