const User = require('../../../model/userModel');

module.exports = {
    name: 'crime',
    description: 'üé∞ Th·ª≠ v·∫≠n may v·ªõi vi·ªác ph·∫°m t·ªôi (c√≥ th·ªÉ m·∫•t ti·ªÅn)',
    execute: async (message) => {
        const userId = message.author.id;
        const now = Date.now();
        const cooldownTime = 6 * 60 * 60 * 1000; // 6 gi·ªù (ms)

        try {
            let user = await User.findOne({ userId });
            if (!user) {
                user = new User({ userId, money: 1000, lastCrime: 0 });
            }

            // Ki·ªÉm tra cooldown
            if (now - user.lastCrime < cooldownTime) {
                const remainingTime = cooldownTime - (now - user.lastCrime);
                const hours = Math.floor(remainingTime / (60 * 60 * 1000));
                const minutes = Math.floor((remainingTime % (60 * 60 * 1000)) / (60 * 1000));
                return message.reply(`‚è≥ B·∫°n ph·∫£i ƒë·ª£i ${hours} gi·ªù ${minutes} ph√∫t n·ªØa m·ªõi c√≥ th·ªÉ th·ª±c hi·ªán ph·∫°m t·ªôi!`);
            }

            const chance = Math.random();
            const amount = Math.floor(Math.random() * (1000 - 500 + 1)) + 500; // T·ª´ 500 ƒë·∫øn 1000 coin

            if (chance < 0.5) {
                user.money += amount;
                message.reply(`üéâ B·∫°n ƒëi ƒÉn tr·ªôm v√† ki·∫øm ƒë∆∞·ª£c ${amount} coin!`);
            } else {
                user.money -= amount;
                message.reply(`üöî B·∫°n b·ªã b·∫Øt khi ƒëi ƒÉn tr·ªôm v√† m·∫•t ${amount} coin!`);
            }

            // C·∫≠p nh·∫≠t th·ªùi gian th·ª±c hi·ªán crime
            user.lastCrime = now;
            await user.save();
        } catch (error) {
            console.error('L·ªói khi x·ª≠ l√Ω crime:', error);
            message.reply('‚ö† ƒê√£ x·∫£y ra l·ªói khi th·ª≠ v·∫≠n may ph·∫°m t·ªôi.');
        }
    }
};
